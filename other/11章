是否看过红宝书，js圣经。

看别人的读书笔记。浅层学习看输入，深层学习看输出。

如果做Code Review，代码检查。

代码规范(eslint不能全检查，比如变量命名，代码语义。)。重复代码要抽离，复用。单个函数内容过长，需要拆分。算法复杂度是否可用，是否可继续优化。是否有安全漏洞。扩展性如何，不用为了扩展而扩展，不封闭即可。是否和现有的功能重复了。是否有完善的单元测试。组件设计是否合理。

提交PR或MR时，通过代码diff进行Code Review，每周例行一次集体Code Review。

每次Code review 的问题，记录下来，持续优化。归纳整理，形成自己的代码体系，新加入的成员要提前学习。

如何学习一门新语言

这门语言优势和应用场景，语法(常量，变量，数据类型，运算符，函数)，内置模块，API，常用的第三方框架和库，开发环境和调试工具，线上环境和发布过程。

node是单线程高并发，CPU密集应用场景。js写的，

自己有哪些不足之处。

HR是谈钱的，不谈别的。不足之处一定要限制在技术范围，不要和HR聊别的。

不足不要乱说，范围限定在技术方面，而且非核心技术栈，容易弥补的，后面才能翻身。要反转话题，要通过不足体现优势，通过学习弥补。

我觉得自己在xxx方面存在不足，但我已经意识到，并开始学习xxx，会在xxx时间把这块补齐。

性子比较急，当有了需求之后立刻就会投入到工作状态，用自身的理解来做事，但是这在带团队做项目中就显得不怎么合适，所以现在需求来了，先做拆分，沟通协同方，一定要敲定资源和具体时间，将风险降到最低，然后再开始做。从口头答应落实到本子上。之前大家关系也都不错。